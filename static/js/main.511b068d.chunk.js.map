{"version":3,"sources":["data.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["skills","x","rosterSpecialRules","starPlayerSpecialRules","roster","name","positionals","costOfReRolls","tier","specialRules","apothecaryAllowed","positional","quantity","position","cost","ma","st","ag","pa","av","primaryAccess","secondaryAccess","starPlayer","playsFor","rosters","starPlayers","player","positionNumber","positionName","value","isStar","maMod","stMod","agMod","paMod","avMod","primarySkills","secondarySkills","Team","props","setRoster","rosterIndex","setState","reRolls","dedicatedFans","assistantCoaches","cheerleaders","apothecary","players","Array","fill","map","availableStarPlayers","getFilteredStarPlayers","setRulesPresetStandard","budget","costMultiplierReRolls","costOfAssistantCoaches","costOfCheerleaders","costOfDedicatedFans","costOfApothecary","setRulesPresetSevens","getCostOfReRolls","Math","round","state","setPlayer","playerNumber","p","document","activeElement","blur","onSetPlayerOpen","options","i","length","textContent","onSetPlayerClose","setPlayerName","playerName","getSelectedPlayer","showPlayerAdvancementModal","selectedPlayerNumber","setSelectedPlayer","renderPlayerSkills","s","className","concat","renderPlayerChar","char","interactive","mod","includes","toggleSelectedPlayerChar","playerCharMayBeImproved","renderSkill","skill","category","onClick","removeSkill","addSkill","push","sort","filter","getPlayerValue","playerAdvancementsCostGold","costOfPrimarySkill","costOfSecondarySkill","costOfMA","costOfST","costOfAG","costOfPA","costOfAV","getTeamValue","tv","reduce","total","getTreasury","treasury","formatCost","toString","replace","toggleCustomisePlayerAdvancementCosts","customisePlayerAdvancementCosts","some","r","coach","Container","Tabs","defaultActiveKey","Tab","eventKey","title","Row","Col","md","Table","borderless","size","Form","Control","type","this","onChange","e","target","as","readOnly","min","max","parseInt","plaintext","Button","variant","Number","MAX_SAFE_INTEGER","Check","inline","defaultChecked","bordered","hover","id","onFocus","children","onBlur","Modal","show","onHide","animation","centered","Header","closeButton","Title","Body","Component","ReactGA","initialize","pageview","window","location","href","App","rel","xmlns","width","height","viewBox","d","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.511b068d.chunk.js","sourcesContent":["const skills = {\n  // Agility\n  catch: \"Catch\",\n  divingCatch: \"Diving Catch\",\n  divingTackle: \"Diving Tackle\",\n  dodge: \"Dodge\",\n  defensive: \"Defensive\",\n  jumpUp: \"Jump Up\",\n  leap: \"Leap\",\n  safePairOfHands: \"Safe Pair of Hands\",\n  sideStep: \"Side Step\",\n  sneakyGit: \"Sneaky Git\",\n  sprint: \"Sprint\",\n  sureFeet: \"Sure Feet\",\n  // General\n  block: \"Block\",\n  dauntless: \"Dauntless\",\n  dirtyPlayer: (x) => \"Dirty Player (+\" + x + \")\",\n  fend: \"Fend\",\n  frenzy: \"Frenzy\",\n  kick: \"Kick\",\n  pro: \"Pro\",\n  shadowing: \"Shadowing\",\n  stripBall: \"Strip Ball\",\n  sureHands: \"Sure Hands\",\n  tackle: \"Tackle\",\n  wrestle: \"Wrestle\",\n  // Mutation\n  bigHand: \"Big Hand\",\n  claws: \"Claws\",\n  disturbingPresence: \"Disturbing Presence\",\n  extraArms: \"Extra Arms\",\n  foulAppearance: \"Foul Appearance\",\n  horns: \"Horns\",\n  ironHardSkin: \"Iron Hard Skin\",\n  monstrousMouth: \"Monstrous Mouth\",\n  prehensileTail: \"Prehensile Tail\",\n  tentacles: \"Tentacles\",\n  twoHeads: \"Two Heads\",\n  veryLongLegs: \"Very Long Legs\",\n  // Passing\n  accurate: \"Accurate\",\n  cannoneer: \"Cannoneer\",\n  cloudBurster: \"Cloud Burster\",\n  dumpOff: \"Dump-off\",\n  fumblerooskie: \"Fumblerooskie\",\n  hailMaryPass: \"Hail Mary Pass\",\n  leader: \"Leader\",\n  nervesOfSteel: \"Nerves of Steel\",\n  onTheBall: \"On the Ball\",\n  pass: \"Pass\",\n  runningPass: \"Running Pass\",\n  safePass: \"Safe Pass\",\n  // Strength\n  armBar: \"Arm Bar\",\n  brawler: \"Brawler\",\n  breakTackle: \"Break Tackle\",\n  grab: \"Grab\",\n  guard: \"Guard\",\n  juggernaut: \"Juggernaut\",\n  mightyBlow: (x) => \"Mighty Blow (+\" + x + \")\",\n  multipleBlock: \"Multiple Block\",\n  pileDriver: \"Pile Driver\",\n  standFirm: \"Stand Firm\",\n  strongArm: \"Strong Arm\",\n  thickSkull: \"Thick Skull\",\n  // Traits\n  animalSavagery: \"Animal Savagery\",\n  animosity: (x) => \"Animosity (\" + x + \")\",\n  alwaysHungry: \"Always Hungry\",\n  ballAndChain: \"Ball & Chain\",\n  bombardier: \"Bombardier\",\n  boneHead: \"Bone Head\",\n  chainsaw: \"Chainsaw\",\n  decay: \"Decay\",\n  hypnoticGaze: \"Hypnotic Gaze\",\n  kickTeamMate: \"Kick Team Mate\",\n  loner: (x) => \"Loner (\" + x + \"+)\",\n  noHands: \"No Hands\",\n  plagueRidden: \"Plague Ridden\",\n  pogoStick: \"Pogo Stick\",\n  projectileVomit: \"Projectile Vomit\",\n  reallyStupid: \"Really Stupid\",\n  regeneration: \"Regeneration\",\n  rightStuff: \"Right Stuff\",\n  secretWeapon: \"Secret Weapon\",\n  stab: \"Stab\",\n  stunty: \"Stunty\",\n  swarming: \"Swarming\",\n  swoop: \"Swoop\",\n  takeRoot: \"Take Root\",\n  titchy: \"Titchy\",\n  timmmber: \"Timmm-ber!\",\n  throwTeamMate: \"Throw Team-mate\",\n  unchannelledFury: \"Unchannelled Fury\",\n};\n\n\nconst rosterSpecialRules = {\n  any: \"Any team\",\n  badlandsBrawl: \"Badlands Brawl\",\n  briberyAndCorruption: \"Bribery and Corruption\",\n  elvenKingdomsLeague: \"Elven Kingdoms League\",\n  favouredOf: \"Favoured of...\",\n  favouredOfNurgle: \"Favoured of Nurgle\",\n  favouredOfKhorne: \"Favoured of Khorne\",\n  halflingThimbleCup: \"Halfling Thimble Cup\",\n  lowCostLinemen: \"Low Cost Linement\",\n  lustrianSuperleague: \"Lustrian Superleague\",\n  mastersOfUndeath: \"Masters of Undeath\",\n  oldWorldClassic: \"Old World Classic\",\n  sylvanianSpotlight: \"Sylvanlian Spotlight\",\n  underworldChallenge: \"Underworld Challenge\",\n  worldsEdgeSuperleague: \"Worlds Edge Superleague\",\n};\n\n\nconst starPlayerSpecialRules = {\n  blindRage: \"Blind Rage\",\n  brutalBlock: \"Brutal Block\",\n  burstOfSpeed: \"Burst of Speed\",\n  consummateProfessional: \"Consummate Professional\",\n  crushingBlow: \"Crushing Blow\",\n  excuseMeAreYouAZoat: \"Excuse Me, Are You a Zoat?\",  // TODO: should have double quotes\n  frenziedRush: \"Frenzied Rush\",\n  furyOfTheBloodGod: \"Fury of the Blood God\",\n  ghostlyFlames: \"Ghostly Flames\",\n  goredByTheBull: \"Gored by the Bull\",\n  incorporeal: \"Incorporeal\",\n  indomitable: \"Indomitable\",\n  lordOfChaos: \"Lord of Chaos\",\n  maximumCarnage: \"Maximum Carnage\",\n  mesmerizingDance: \"Mesmerizing Dance\",\n  oldPro: \"Old Pro\",\n  ram: \"Ram\",\n  reliable: \"Reliable\",\n  savageMauling: \"Savage Mauling\",\n  shotToNothing: \"Shot to Nothing\",\n  slayer: \"Slayer\",\n  sneakiestOfTheLot: \"Sneakiest of the Lot\",\n  strongPassingGame: \"Strong Passing Game\",\n  theBallista: \"The Ballista\",\n  twoForOne: \"Two for One\",\n  treacherous: \"Treacherous\",\n  wisdomOfTheWhiteDwarf: \"Wisdom of the White Dwarf\",\n};\n\n\nconst roster = (name, positionals, costOfReRolls, tier, specialRules, apothecaryAllowed) => {\n  return {\n    name: name,\n    positionals: positionals,\n    costOfReRolls: costOfReRolls,\n    tier: tier,\n    specialRules: specialRules,\n    apothecaryAllowed: apothecaryAllowed,\n  };\n};\n\n\nconst positional = (quantity, position, cost, ma, st, ag, pa, av, skills, primaryAccess, secondaryAccess) => {\n  return {\n    quantity: quantity,\n    position: position,\n    cost: cost,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    skills: skills,\n    primaryAccess: primaryAccess,\n    secondaryAccess: secondaryAccess,\n  };\n};\n\n\nconst starPlayer = (name, ma, st, ag, pa, av, skills, cost, playsFor, specialRules) => {\n  return {\n    name: name,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    skills: skills,\n    cost: cost,\n    playsFor: playsFor,\n    specialRules: specialRules,\n  };\n};\n\n\nconst rosters = [\n  roster(\n    \"Amazon\",\n    [\n      positional(16, \"Linewoman\", 50000, 6, 3, 3, 4, 8, [skills.dodge], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 75000, 6, 3, 3, 3, 8, [skills.dodge, skills.pass], \"GP\", \"AS\"),\n      positional(2, \"Catcher\", 75000, 6, 3, 3, 5, 8, [skills.catch, skills.dodge], \"AG\", \"S\"),\n      positional(4, \"Blitzer\", 90000, 6, 3, 3, 5, 8, [skills.block, skills.dodge], \"GS\", \"A\")\n    ],\n    50000,\n    1,\n    [rosterSpecialRules.lustrianSuperleague],\n    true,\n  ),\n  roster(\n    \"Black Orc\",\n    [\n      positional(12, \"Goblin Bruiser\", 45000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty, skills.thickSkull], \"A\", \"GPS\"),\n      positional(6, \"Black Orc\", 90000, 4, 4, 4, 5, 10, [skills.brawler, skills.grab], \"GS\", \"AP\"),\n      positional(1, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    2,\n    [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.briberyAndCorruption],\n    true,\n  ),\n  roster(\n    \"Chaos Chosen\",\n    [\n      positional(16, \"Beastman Runner\", 60000, 6, 3, 3, 4, 9, [skills.horns], \"GMS\", \"AP\"),\n      positional(4, \"Chosen Blocker\", 100000, 5, 4, 3, 5, 10, [], \"GMS\", \"A\"),\n      positional(1, \"Chaos Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"MS\", \"AG\"),\n      positional(1, \"Chaos Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"MS\", \"AG\"),\n      positional(1, \"Minotaur\", 150000, 5, 5, 4, null, 9, [skills.loner(4), skills.frenzy, skills.horns, skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], \"MS\", \"AG\")\n    ],\n    60000,\n    2,\n    [rosterSpecialRules.favouredOf],\n    true,\n  ),\n  roster(\n    \"Chaos Dwarf\",\n    [\n      positional(16, \"Hobgoblin\", 40000, 6, 3, 3, 4, 8, [], \"G\", \"AS\"),\n      positional(6, \"Blocker\", 70000, 4, 3, 4, 6, 10, [skills.block, skills.tackle, skills.thickSkull], \"GS\", \"AM\"),\n      positional(2, \"Bull Centaur\", 130000, 6, 4, 4, 6, 10, [skills.sprint, skills.sureFeet, skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Enslaved Minotaur\", 150000, 5, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.horns, skills.loner(4), skills.mightyBlow(1), skills.thickSkull], \"S\", \"AGM\")\n    ],\n    70000,\n    1,\n    [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.favouredOf, rosterSpecialRules.worldsEdgeSuperleague],\n    true,\n  ),\n  roster(\n    \"Chaos Renegade\",\n    [\n      positional(12, \"Human Lineman\", 50000, 6, 3, 3, 4, 9, [], \"GM\", \"AS\"),\n      positional(1, \"Human Thrower\", 75000, 6, 3, 3, 3, 9, [skills.animosity(\"all team-mates\"), skills.pass, skills.safePairOfHands], \"GMP\", \"AS\"),\n      positional(1, \"Goblin\", 40000, 6, 2, 3, 4, 8, [skills.animosity(\"all team-mates\"), skills.dodge, skills.rightStuff, skills.stunty], \"AM\", \"GP\"),\n      positional(1, \"Orc\", 50000, 5, 3, 3, 5, 10, [skills.animosity(\"all team-mates\")], \"GM\", \"AS\"),\n      positional(1, \"Skaven\", 50000, 7, 3, 3, 4, 8, [skills.animosity(\"all team-mates\")], \"GM\", \"AS\"),\n      positional(1, \"Dark Elf\", 75000, 6, 3, 2, 3, 9, [skills.animosity(\"all team-mates\")], \"AGM\", \"PS\"),\n      positional(1, \"Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGM\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AGM\"),\n      positional(1, \"Minotaur\", 150000, 5, 5, 4, null, 9, [skills.loner(4), skills.frenzy, skills.horns, skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], \"S\", \"AGM\"),\n      positional(1, \"Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"S\", \"AGM\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.favouredOf],\n    true,\n  ),\n  roster(\n    \"Daemons of Khorne\",\n    [\n      positional(16, \"Pit Fighter\", 60000, 6, 3, 3, 4, 9, [skills.frenzy], \"G\", \"AS\"),\n      positional(4, \"Bloodletter\", 80000, 6, 3, 3, 4, 8, [skills.horns, skills.juggernaut, skills.regeneration], \"AGS\", \"P\"),\n      positional(2, \"Herald\", 90000, 6, 3, 3, 5, 9, [skills.frenzy, skills.horns, skills.juggernaut], \"GS\", \"AP\"),\n      positional(1, \"Bloodthirster\", 180000, 6, 5, 5, null, 10, [skills.claws, skills.frenzy, skills.horns, skills.juggernaut, skills.loner(4), skills.regeneration, skills.unchannelledFury], \"S\", \"AG\"),\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.favouredOf, rosterSpecialRules.favouredOfKhorne],\n    true,\n  ),\n  roster(\n    \"Dark Elf\",\n    [\n      positional(12, \"Lineman\", 70000, 6, 3, 2, 4, 9, [], \"AG\", \"S\"),\n      positional(2, \"Runner\", 80000, 7, 3, 2, 3, 8, [skills.dumpOff], \"AGP\", \"S\"),\n      positional(4, \"Blitzer\", 100000, 7, 3, 2, 4, 9, [skills.block], \"AG\", \"PS\"),\n      positional(2, \"Assassin\", 85000, 7, 3, 2, 5, 8, [skills.shadowing, skills.stab], \"AG\", \"PS\"),\n      positional(2, \"Witch Elf\", 110000, 7, 3, 2, 5, 8, [skills.dodge, skills.frenzy, skills.jumpUp], \"AG\", \"PS\")\n    ],\n    50000,\n    1,\n    [rosterSpecialRules.elvenKingdomsLeague],\n    true,\n  ),\n  roster(\n    \"Dwarf\",\n    [\n      positional(12, \"Blocker\", 70000, 4, 3, 4, 5, 10, [skills.block, skills.tackle, skills.thickSkull], \"GS\", \"A\"),\n      positional(2, \"Runner\", 85000, 6, 3, 3, 4, 9, [skills.sureHands, skills.thickSkull], \"GP\", \"AS\"),\n      positional(2, \"Blitzer\", 80000, 5, 3, 3, 4, 10, [skills.block, skills.thickSkull], \"GS\", \"AP\"),\n      positional(2, \"Troll Slayer\", 95000, 5, 3, 4, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Deathroller\", 170000, 4, 7, 5, null, 11, [skills.breakTackle, skills.dirtyPlayer(2), skills.juggernaut, skills.loner(5), skills.mightyBlow(1), skills.noHands, skills.secretWeapon, skills.standFirm], \"S\", \"AG\")\n    ],\n    50000,\n    1,\n    [rosterSpecialRules.oldWorldClassic, rosterSpecialRules.worldsEdgeSuperleague],\n    true,\n  ),\n  roster(\n    \"Elven Union\",\n    [\n      positional(12, \"Lineman\", 60000, 6, 3, 2, 4, 8, [], \"AG\", \"S\"),\n      positional(2, \"Thrower\", 75000, 6, 3, 2, 2, 8, [skills.pass], \"AGP\", \"S\"),\n      positional(4, \"Catcher\", 100000, 8, 3, 2, 4, 8, [skills.catch, skills.nervesOfSteel], \"AG\", \"S\"),\n      positional(2, \"Blitzer\", 115000, 7, 3, 2, 3, 9, [skills.block, skills.sideStep], \"AG\", \"PS\")\n    ],\n    50000,\n    2,\n    [rosterSpecialRules.elvenKingdomsLeague],\n    true,\n  ),\n  roster(\n    \"Goblin\",\n    [\n      positional(16, \"Lineman\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Bomma\", 45000, 6, 2, 3, 4, 8, [skills.bombardier, skills.dodge, skills.secretWeapon, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Looney\", 40000, 6, 2, 3, null, 8, [skills.chainsaw, skills.secretWeapon, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Fanatic\", 70000, 3, 7, 3, null, 8, [skills.ballAndChain, skills.noHands, skills.secretWeapon, skills.stunty], \"S\", \"AG\"),\n      positional(1, \"Pogoer\", 75000, 7, 2, 3, 5, 8, [skills.dodge, skills.pogoStick, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Ooligan\", 65000, 6, 2, 3, 6, 8, [skills.dirtyPlayer(1), skills.disturbingPresence, skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Doom Diver\", 60000, 6, 2, 3, 6, 8, [skills.rightStuff, skills.stunty, skills.swoop], \"A\", \"GS\"),\n      positional(2, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    3,\n    [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.briberyAndCorruption, rosterSpecialRules.underworldChallenge],\n    true,\n  ),\n  roster(\n    \"Halfling\",\n    [\n      positional(16, \"Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(2, \"Hefty\", 50000, 5, 2, 3, 3, 8, [skills.dodge, skills.fend, skills.stunty], \"AP\", \"GS\"),\n      positional(2, \"Catcher\", 55000, 5, 2, 3, 5, 7, [skills.catch, skills.dodge, skills.rightStuff, skills.sprint, skills.stunty], \"A\", \"GS\"),\n      positional(2, \"Altern Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate, skills.timmmber], \"S\", \"AGP\")\n    ],\n    60000,\n    3,\n    [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic],\n    true,\n  ),\n  roster(\n    \"High Elf\",\n    [\n      positional(16, \"Lineman\", 70000, 6, 3, 2, 4, 9, [], \"AG\", \"PS\"),\n      positional(2, \"Thrower\", 100000, 6, 3, 2, 2, 9, [skills.cloudBurster, skills.pass, skills.safePass], \"AGP\", \"S\"),\n      positional(4, \"Catcher\", 90000, 8, 3, 2, 5, 8, [skills.catch], \"AG\", \"S\"),\n      positional(2, \"Blitzer\", 100000, 7, 3, 2, 4, 9, [skills.block], \"AG\", \"PS\")\n    ],\n    50000,\n    1,\n    [rosterSpecialRules.elvenKingdomsLeague],\n    true,\n  ),\n  roster(\n    \"Human\",\n    [\n      positional(16, \"Lineman\", 50000, 6, 3, 3, 4, 9, [], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 80000, 6, 3, 3, 2, 9, [skills.pass, skills.sureHands], \"GP\", \"AS\"),\n      positional(4, \"Catcher\", 65000, 8, 2, 3, 5, 8, [skills.catch, skills.dodge], \"AG\", \"SP\"),\n      positional(4, \"Blitzer\", 85000, 7, 3, 3, 4, 9, [skills.block], \"GS\", \"AP\"),\n      positional(3, \"Halfling Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\n    ],\n    50000,\n    2,\n    [rosterSpecialRules.oldWorldClassic],\n    true,\n  ),\n  roster(\n    \"Imperial Nobility\",\n    [\n      positional(12, \"Retainer Lineman\", 45000, 6, 3, 4, 4, 8, [skills.fend], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 75000, 6, 3, 3, 3, 9, [skills.pass, skills.runningPass], \"GP\", \"AS\"),\n      positional(2, \"Noble Blitzer\", 105000, 7, 3, 3, 4, 9, [skills.block, skills.catch], \"AG\", \"PS\"),\n      positional(4, \"Bodyguard\", 90000, 6, 3, 3, 5, 9, [skills.standFirm, skills.wrestle], \"GS\", \"A\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.oldWorldClassic],\n    true,\n  ),\n  roster(\n    \"Khorne\",\n    [\n      positional(16, \"Bloodborn Marauder\", 50000, 6, 3, 3, 4, 8, [skills.frenzy], \"GM\", \"AS\"),\n      positional(4, \"Khorngor\", 70000, 6, 3, 3, 4, 9, [skills.horns, skills.juggernaut], \"GMS\", \"AP\"),\n      positional(4, \"Bloodseeker\", 110000, 5, 4, 4, 6, 10, [skills.frenzy], \"GMS\", \"A\"),\n      positional(1, \"Bloodspawn\", 160000, 5, 5, 4, null, 9, [skills.claws, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.unchannelledFury], \"MS\", \"AG\")\n    ],\n    60000,\n    2,\n    [rosterSpecialRules.favouredOf, rosterSpecialRules.favouredOfKhorne],\n    true,\n  ),\n  roster(\n    \"Lizardmen\",\n    [\n      positional(12, \"Skink Runner\", 60000, 8, 2, 3, 4, 8, [skills.dodge, skills.stunty], \"A\", \"GPS\"),\n      positional(2, \"Chameleon Skink\", 70000, 7, 2, 3, 3, 8, [skills.dodge, skills.onTheBall, skills.shadowing, skills.stunty], \"A\", \"GPS\"),\n      positional(6, \"Saurus Blocker\", 85000, 6, 4, 5, 6, 10, [], \"GS\", \"A\"),\n      positional(1, \"Kroxigor\", 140000, 6, 5, 5, null, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull], \"S\", \"AG\")\n    ],\n    70000,\n    1,\n    [rosterSpecialRules.lustrianSuperleague],\n    true,\n  ),\n  roster(\n    \"Necromantic Horror\",\n    [\n      positional(16, \"Zombie\", 40000, 4, 3, 4, null, 9, [skills.regeneration], \"G\", \"AS\"),\n      positional(2, \"Ghoul Runner\", 75000, 7, 3, 3, 4, 8, [skills.dodge], \"AG\", \"PS\"),\n      positional(2, \"Wraith\", 95000, 6, 3, 3, null, 9, [skills.block, skills.foulAppearance, skills.noHands, skills.regeneration, skills.sideStep], \"GS\", \"A\"),\n      positional(2, \"Werewolf\", 125000, 8, 3, 3, 4, 9, [skills.claws, skills.frenzy, skills.regeneration], \"AG\", \"PS\"),\n      positional(2, \"Flesh Golem\", 115000, 4, 4, 4, null, 10, [skills.regeneration, skills.standFirm, skills.thickSkull], \"GS\", \"A\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.mastersOfUndeath, rosterSpecialRules.sylvanianSpotlight],\n    false,\n  ),\n  roster(\n    \"Norse\",\n    [\n      positional(12, \"Lineman\", 50000, 6, 3, 3, 4, 8, [skills.block], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 70000, 6, 3, 3, 3, 8, [skills.block, skills.pass], \"GP\", \"AS\"),\n      positional(2, \"Catcher\", 90000, 7, 3, 3, 5, 8, [skills.block, skills.dauntless], \"AG\", \"S\"),\n      positional(2, \"Berserker\", 90000, 6, 3, 3, 5, 8, [skills.block, skills.frenzy, skills.jumpUp], \"GS\", \"A\"),\n      positional(2, \"Ulfwerener\", 105000, 6, 4, 4, null, 9, [skills.frenzy], \"GS\", \"A\"),\n      positional(1, \"Yhetee\", 140000, 5, 5, 5, null, 9, [skills.claws, skills.disturbingPresence, skills.frenzy, skills.loner(4), skills.unchannelledFury], \"S\", \"AG\")\n    ],\n    60000,\n    1,\n    [rosterSpecialRules.lustrianSuperleague, rosterSpecialRules.oldWorldClassic],\n    true,\n  ),\n  roster(\n    \"Nurgle\",\n    [\n      positional(12, \"Rotter\", 35000, 5, 3, 4, 6, 9, [skills.decay, skills.plagueRidden], \"GM\", \"AS\"),\n      positional(4, \"Pestigor\", 75000, 6, 3, 3, 4, 9, [skills.horns, skills.plagueRidden, skills.regeneration], \"GMS\", \"AP\"),\n      positional(4, \"Bloater\", 115000, 4, 4, 4, 6, 10, [skills.disturbingPresence, skills.foulAppearance, skills.plagueRidden, skills.regeneration], \"GMS\", \"A\"),\n      positional(1, \"Rotspawn\", 140000, 4, 5, 5, null, 10, [skills.disturbingPresence, skills.foulAppearance, skills.loner(4), skills.mightyBlow(1), skills.plagueRidden, skills.reallyStupid, skills.regeneration, skills.tentacles], \"S\", \"AGM\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.favouredOf, rosterSpecialRules.favouredOfNurgle],\n    false,\n  ),\n  roster(\n    \"Ogre\",\n    [\n      positional(16, \"Gnoblar\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.titchy], \"A\", \"G\"),\n      positional(1, \"Ogre Runt Punter\", 145000, 5, 5, 4, 4, 10, [skills.boneHead, skills.kickTeamMate, skills.mightyBlow(1), skills.thickSkull], \"PS\", \"AG\"),\n      positional(5, \"Ogre Blocker\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    70000,\n    3,\n    [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.lowCostLinemen, rosterSpecialRules.oldWorldClassic],\n    true,\n  ),\n  roster(\n    \"Old World Alliance\",\n    [\n      positional(12, \"Human Lineman\", 50000, 6, 3, 3, 4, 9, [], \"G\", \"AS\"),\n      positional(1, \"Human Thrower\", 80000, 6, 3, 3, 3, 9, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.pass, skills.sureHands], \"GP\", \"AS\"),\n      positional(1, \"Human Catcher\", 65000, 8, 2, 3, 5, 8, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.catch, skills.dodge], \"AG\", \"S\"),\n      positional(1, \"Human Blitzer\", 90000, 7, 3, 3, 4, 9, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.block], \"GS\", \"A\"),\n      positional(2, \"Dwarf Blocker\", 75000, 4, 3, 4, 5, 10, [skills.armBar, skills.brawler, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Dwarf Runner\", 85000, 6, 3, 3, 4, 9, [skills.loner(3), skills.sureHands, skills.thickSkull], \"GP\", \"AS\"),\n      positional(1, \"Dwarf Blitzer\", 80000, 5, 3, 3, 4, 10, [skills.block, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Dwarf Troll Slayer\", 95000, 5, 3, 4, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\n      positional(2, \"Halfling Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.animosity(\"all Dwarf and Human team-mates\"), skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\"),\n      positional(1, \"Altern Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate, skills.timmmber], \"S\", \"AGP\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.oldWorldClassic],\n    true,\n  ),\n  roster(\n    \"Orc\",\n    [\n      positional(16, \"Lineman\", 50000, 5, 3, 3, 4, 10, [skills.animosity(\"Orc Linemen\")], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 65000, 5, 3, 3, 3, 9, [skills.animosity(\"all team-mates\"), skills.pass, skills.sureHands], \"GP\", \"AS\"),\n      positional(4, \"Blitzer\", 80000, 6, 3, 3, 4, 10, [skills.animosity(\"all team-mates\"), skills.block], \"GS\", \"AP\"),\n      positional(4, \"Big Un Blocker\", 90000, 5, 4, 4, null, 10, [skills.animosity(\"Big Un Blockers\")], \"GS\", \"A\"),\n      positional(4, \"Goblin\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Untrained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    2,\n    [rosterSpecialRules.badlandsBrawl],\n    true,\n  ),\n  roster(\n    \"Shambling Undead\",\n    [\n      positional(12, \"Skeleton\", 40000, 5, 3, 4, 6, 8, [skills.regeneration, skills.thickSkull], \"G\", \"AS\"),\n      positional(12, \"Zombie\", 40000, 4, 3, 4, null, 9, [skills.regeneration], \"G\", \"AS\"),\n      positional(4, \"Ghoul Runner\", 75000, 7, 3, 3, 4, 8, [skills.dodge], \"AG\", \"PS\"),\n      positional(2, \"Wight Blitzer\", 90000, 6, 3, 3, 5, 9, [skills.block, skills.regeneration], \"GS\", \"AP\"),\n      positional(2, \"Mummy\", 125000, 3, 5, 5, null, 10, [skills.mightyBlow(1), skills.regeneration], \"S\", \"AG\")\n    ],\n    70000,\n    1,\n    [rosterSpecialRules.mastersOfUndeath, rosterSpecialRules.sylvanianSpotlight],\n    false,\n  ),\n  roster(\n    \"Skaven\",\n    [\n      positional(16, \"Clanrat Lineman\", 50000, 7, 3, 3, 4, 8, [], \"G\", \"AMS\"),\n      positional(2, \"Thrower\", 85000, 7, 3, 3, 2, 8, [skills.pass, skills.sureHands], \"GP\", \"AMS\"),\n      positional(4, \"Gutter Runner\", 85000, 9, 2, 2, 4, 8, [skills.dodge], \"AG\", \"MPS\"),\n      positional(2, \"Blitzer\", 90000, 7, 3, 3, 5, 9, [skills.block], \"GS\", \"AMP\"),\n      positional(1, \"Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"S\", \"AGM\")\n    ],\n    50000,\n    1,\n    [rosterSpecialRules.underworldChallenge],\n    true,\n  ),\n  roster(\n    \"Slann\",\n    [\n      positional(16, \"Lineman\", 60000, 6, 3, 3, 4, 9, [skills.pogoStick, skills.veryLongLegs], \"G\", \"AS\"),\n      positional(4, \"Catcher\", 80000, 7, 2, 2, 4, 8, [skills.divingCatch, skills.pogoStick, skills.veryLongLegs], \"AG\", \"PS\"),\n      positional(4, \"Blitzer\", 110000, 7, 3, 3, 4, 9, [skills.divingTackle, skills.jumpUp, skills.pogoStick, skills.veryLongLegs], \"AGS\", \"P\"),\n      positional(1, \"Kroxigor\", 140000, 6, 5, 5, null, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull], \"S\", \"AG\")\n    ],\n    50000,\n    2,\n    [rosterSpecialRules.lustrianSuperleague],\n    true,\n  ),\n  roster(\n    \"Snotling\",\n    [\n      positional(16, \"Snotling Lineman\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.swarming, skills.titchy], \"A\", \"G\"),\n      positional(2, \"Fungus Flinga\", 30000, 5, 1, 3, 4, 6, [skills.bombardier, skills.dodge, skills.rightStuff, skills.secretWeapon, skills.sideStep, skills.stunty], \"AP\", \"G\"),\n      positional(2, \"Fun-hoppa\", 20000, 6, 1, 3, 5, 6, [skills.dodge, skills.pogoStick, skills.rightStuff, skills.sideStep, skills.stunty], \"A\", \"G\"),\n      positional(2, \"Stilty Runna\", 20000, 6, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.sprint, skills.stunty], \"A\", \"G\"),\n      positional(2, \"Pump Wagon\", 105000, 4, 5, 5, null, 9, [skills.dirtyPlayer(1), skills.juggernaut, skills.mightyBlow(1), skills.reallyStupid, skills.secretWeapon, skills.standFirm], \"S\", \"AG\"),\n      positional(2, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    3,\n    [rosterSpecialRules.briberyAndCorruption, rosterSpecialRules.lowCostLinemen, rosterSpecialRules.underworldChallenge],\n    true,\n  ),\n  roster(\n    \"Tomb Kings\",\n    [\n      positional(16, \"Skeleton\", 40000, 5, 3, 4, 6, 8, [skills.regeneration, skills.thickSkull], \"G\", \"AS\"),\n      positional(2, \"Anointed Thrower\", 70000, 6, 3, 4, 3, 8, [skills.pass, skills.regeneration, skills.sureHands, skills.thickSkull], \"GP\", \"A\"),\n      positional(2, \"Anointed Blitzer\", 90000, 6, 3, 4, 6, 9, [skills.block, skills.regeneration, skills.thickSkull], \"GS\", \"AP\"),\n      positional(4, \"Tomb Guardian\", 100000, 4, 5, 5, null, 10, [skills.decay, skills.regeneration], \"S\", \"AG\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.sylvanianSpotlight],\n    false,\n  ),\n  roster(\n    \"Underworld Denizens\",\n    [\n      positional(12, \"Underworld Goblin\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"AM\", \"GS\"),\n      positional(6, \"Underworld Snotling\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.swarming, skills.titchy], \"AM\", \"G\"),\n      positional(3, \"Skaven Clanrat\", 50000, 7, 3, 3, 4, 8, [skills.animosity(\"Underworld Goblin Linemen\")], \"GM\", \"AS\"),\n      positional(1, \"Skaven Thrower\", 85000, 7, 3, 3, 2, 8, [skills.animosity(\"Underworld Goblin Linemen\"), skills.pass, skills.sureHands], \"GMP\", \"AS\"),\n      positional(1, \"Gutter Runner\", 85000, 9, 2, 2, 4, 8, [skills.animosity(\"Underworld Goblin Linemen\"), skills.dodge], \"AGM\", \"PS\"),\n      positional(1, \"Skaven Blitzer\", 90000, 7, 3, 3, 5, 9, [skills.animosity(\"Underworld Goblin Linemen\"), skills.block], \"GMS\", \"AP\"),\n      positional(1, \"Underworld Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"MS\", \"AGP\"),\n      positional(1, \"Mutant Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"MS\", \"AG\")\n    ],\n    70000,\n    1,\n    [rosterSpecialRules.briberyAndCorruption, rosterSpecialRules.underworldChallenge],\n    true,\n  ),\n  roster(\n    \"Vampire\",\n    [\n      positional(12, \"Thrall\", 40000, 6, 3, 3, 5, 8, [], \"G\", \"AS\"),\n      positional(6, \"Vampire\", 110000, 6, 4, 2, 3, 9, [skills.animalSavagery, skills.hypnoticGaze, skills.regeneration], \"AGS\", \"P\")\n    ],\n    70000,\n    2,\n    [rosterSpecialRules.sylvanianSpotlight],\n    true,\n  ),\n  roster(\n    \"Wood Elf\",\n    [\n      positional(12, \"Lineman\", 70000, 7, 3, 2, 4, 8, [], \"AG\", \"S\"),\n      positional(2, \"Thrower\", 95000, 7, 3, 2, 2, 8, [skills.pass], \"AGP\", \"S\"),\n      positional(4, \"Catcher\", 90000, 8, 2, 2, 4, 8, [skills.catch, skills.dodge], \"AG\", \"PS\"),\n      positional(2, \"Wardancer\", 125000, 8, 3, 2, 4, 8, [skills.block, skills.dodge, skills.leap], \"AG\", \"PS\"),\n      positional(1, \"Loren Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\n    ],\n    50000,\n    1,\n    [rosterSpecialRules.elvenKingdomsLeague],\n    true,\n  ),\n];\n\n\nconst starPlayers = [\n  starPlayer(\"Akhorne the Squirrel\", 7, 1, 2, null, 6, [skills.claws, skills.dauntless, skills.dodge, skills.frenzy, skills.jumpUp, skills.loner(4), skills.noHands, skills.sideStep, skills.stunty, skills.titchy], 80000, [rosterSpecialRules.any], [starPlayerSpecialRules.blindRage]),\n  starPlayer(\"Bryce 'the Slice' Cambuel\", 5, 3, 4, null, 9, [skills.chainsaw, skills.loner(4), skills.regeneration, skills.secretWeapon, skills.standFirm, skills.thickSkull], 130000, [rosterSpecialRules.sylvanianSpotlight], [starPlayerSpecialRules.ghostlyFlames]),\n  starPlayer(\"The Black Gobbo\", 6, 2, 3, 3, 9, [skills.bombardier, skills.disturbingPresence, skills.dodge, skills.loner(3), skills.sideStep, skills.sneakyGit, skills.stab, skills.stunty], 225000, [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.underworldChallenge], [starPlayerSpecialRules.sneakiestOfTheLot]),\n  starPlayer(\"Deeproot Strongbranch\", 2, 7, 5, 4, 11, [skills.block, skills.loner(4), skills.mightyBlow(2), skills.standFirm, skills.strongArm, skills.thickSkull, skills.throwTeamMate, skills.timmmber], 280000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic], [starPlayerSpecialRules.reliable]),\n  starPlayer(\"Eldril Sidewinder\", 8, 3, 2, 5, 8, [skills.catch, skills.dodge, skills.hypnoticGaze, skills.loner(4), skills.nervesOfSteel, skills.onTheBall], 230000, [rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.mesmerizingDance]),\n  starPlayer(\"Frank 'n' Stein\", 4, 5, 4, null, 10, [skills.breakTackle, skills.loner(4), skills.mightyBlow(1), skills.regeneration, skills.standFirm, skills.thickSkull], 250000, [rosterSpecialRules.oldWorldClassic, rosterSpecialRules.sylvanianSpotlight], [starPlayerSpecialRules.brutalBlock]),\n  starPlayer(\"Glart Smashrip\", 5, 4, 4, null, 9, [skills.block, skills.claws, skills.grab, skills.juggernaut, skills.loner(4), skills.standFirm], 195000, [rosterSpecialRules.favouredOf, rosterSpecialRules.underworldChallenge], [starPlayerSpecialRules.frenziedRush]),\n  starPlayer(\"Gloriel Summerbloom\", 7, 2, 2, 2, 8, [skills.accurate, skills.dodge, skills.loner(3), skills.pass, skills.sideStep, skills.sureHands], 150000, [rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.shotToNothing]),\n  starPlayer(\"Grak\", 5, 5, 4, 4, 10, [skills.boneHead, skills.kickTeamMate, skills.loner(4), skills.mightyBlow(1), skills.thickSkull], 250000, [rosterSpecialRules.any], [starPlayerSpecialRules.twoForOne]),\n  starPlayer(\"Crumbleberry\", 5, 2, 3, 6, 7, [skills.dodge, skills.loner(4), skills.rightStuff, skills.stunty, skills.sureHands], 0, [rosterSpecialRules.any], [starPlayerSpecialRules.twoForOne]),\n  starPlayer(\"Grashnak Blackhoof\", 6, 6, 4, null, 9, [skills.frenzy, skills.horns, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], 240000, [rosterSpecialRules.favouredOf], [starPlayerSpecialRules.goredByTheBull]),\n  starPlayer(\"Gretchen Wächter\", 7, 3, 2, null, 9, [skills.disturbingPresence, skills.dodge, skills.foulAppearance, skills.jumpUp, skills.loner(4), skills.noHands, skills.regeneration, skills.shadowing, skills.sideStep], 260000, [rosterSpecialRules.sylvanianSpotlight], [starPlayerSpecialRules.incorporeal]),\n  starPlayer(\"Griff Oberwald\", 7, 4, 2, 3, 9, [skills.block, skills.dodge, skills.fend, skills.loner(3), skills.sprint, skills.sureFeet], 280000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic], [starPlayerSpecialRules.consummateProfessional]),\n  starPlayer(\"Grim Ironjaw\", 5, 4, 3, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.loner(4), skills.multipleBlock, skills.thickSkull], 200000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic, rosterSpecialRules.worldsEdgeSuperleague], [starPlayerSpecialRules.slayer]),\n  starPlayer(\"Hakflem Skuttlespike\", 9, 3, 2, 3, 8, [skills.dodge, skills.extraArms, skills.loner(4), skills.prehensileTail, skills.twoHeads], 210000, [rosterSpecialRules.favouredOf, rosterSpecialRules.underworldChallenge], [starPlayerSpecialRules.treacherous]),\n  starPlayer(\"Helmut Wulf\", 6, 3, 3, null, 9, [skills.chainsaw, skills.loner(4), skills.pro, skills.secretWeapon, skills.standFirm], 140000, [rosterSpecialRules.any], [starPlayerSpecialRules.oldPro]),\n  starPlayer(\"Karla Von Kill\", 6, 4, 3, 4, 9, [skills.block, skills.dauntless, skills.dodge, skills.jumpUp, skills.loner(4)], 210000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic, rosterSpecialRules.lustrianSuperleague], [starPlayerSpecialRules.indomitable]),\n  starPlayer(\"Lord Borak the Despoiler\", 5, 5, 3, 5, 10, [skills.block, skills.dirtyPlayer(2), skills.loner(4), skills.mightyBlow(1), skills.sneakyGit], 260000, [rosterSpecialRules.favouredOf], [starPlayerSpecialRules.lordOfChaos]),\n  starPlayer(\"Max Spleenripper\", 5, 4, 4, null, 9, [skills.chainsaw, skills.loner(4), skills.secretWeapon], 130000, [rosterSpecialRules.favouredOf], [starPlayerSpecialRules.maximumCarnage]),\n  starPlayer(\"Mighty Zug\", 4, 5, 4, 6, 10, [skills.block, skills.loner(4), skills.mightyBlow(1)], 220000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic, rosterSpecialRules.lustrianSuperleague], [starPlayerSpecialRules.crushingBlow]),\n  starPlayer(\"Morg 'n' Thorg\", 6, 6, 3, 4, 11, [skills.block, skills.loner(4), skills.mightyBlow(2), skills.thickSkull, skills.throwTeamMate], 380000, [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.elvenKingdomsLeague, rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.lustrianSuperleague, rosterSpecialRules.oldWorldClassic, rosterSpecialRules.underworldChallenge, rosterSpecialRules.worldsEdgeSuperleague, rosterSpecialRules.favouredOf], [starPlayerSpecialRules.theBallista]),\n  starPlayer(\"Roxanna Darknail\", 8, 3, 1, 4, 8, [skills.dodge, skills.frenzy, skills.jumpUp, skills.juggernaut, skills.leap, skills.loner(4)], 270000, [rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.burstOfSpeed]),\n  starPlayer(\"Rumbelow Sheepskin\", 6, 3, 3, null, 8, [skills.block, skills.horns, skills.juggernaut, skills.loner(4), skills.noHands, skills.tackle, skills.thickSkull], 170000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic, rosterSpecialRules.worldsEdgeSuperleague], [starPlayerSpecialRules.ram]),\n  starPlayer(\"Skrull Halfheight\", 6, 3, 4, 4, 9, [skills.accurate, skills.loner(4), skills.nervesOfSteel, skills.pass, skills.regeneration, skills.sureHands, skills.thickSkull], 150000, [rosterSpecialRules.sylvanianSpotlight, rosterSpecialRules.worldsEdgeSuperleague], [starPlayerSpecialRules.strongPassingGame]),\n  starPlayer(\"Scyla Anfingrimm\", 5, 5, 4, null, 10, [skills.claws, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull, skills.unchannelledFury], 200000, [rosterSpecialRules.favouredOf], [starPlayerSpecialRules.furyOfTheBloodGod]),\n  starPlayer(\"Lucien Swift\", 7, 3, 2, 5, 9, [skills.block, skills.loner(4), skills.mightyBlow(1), skills.tackle], 340000, [rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.twoForOne]),\n  starPlayer(\"Valen Swift\", 7, 3, 2, 2, 8, [skills.accurate, skills.loner(4), skills.nervesOfSteel, skills.pass, skills.safePass, skills.sureHands], 0, [rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.twoForOne]),\n  starPlayer(\"Varag Ghoul-Chewer\", 6, 5, 3, 5, 10, [skills.block, skills.jumpUp, skills.loner(4), skills.mightyBlow(1), skills.thickSkull], 280000, [rosterSpecialRules.badlandsBrawl, rosterSpecialRules.underworldChallenge], [starPlayerSpecialRules.crushingBlow]),\n  starPlayer(\"Grombrindal, the White Dwarf\", 5, 3, 3, 4, 10, [skills.block, skills.dauntless, skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.thickSkull], 210000, [rosterSpecialRules.halflingThimbleCup, rosterSpecialRules.oldWorldClassic, rosterSpecialRules.lustrianSuperleague, rosterSpecialRules.worldsEdgeSuperleague], [starPlayerSpecialRules.wisdomOfTheWhiteDwarf]),\n  starPlayer(\"Wilhelm Chaney\", 8, 4, 3, 4, 9, [skills.catch, skills.claws, skills.frenzy, skills.loner(4), skills.regeneration, skills.wrestle], 220000, [rosterSpecialRules.sylvanianSpotlight], [starPlayerSpecialRules.savageMauling]),\n  starPlayer(\"Willow Rosebark\", 5, 4, 3, 6, 9, [skills.dauntless, skills.loner(4), skills.sideStep, skills.thickSkull], 150000, [rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.indomitable]),\n  starPlayer(\"Zolcath the Zoat\", 5, 5, 4, 5, 10, [skills.disturbingPresence, skills.juggernaut, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.regeneration, skills.sureFeet], 230000, [rosterSpecialRules.lustrianSuperleague, rosterSpecialRules.elvenKingdomsLeague], [starPlayerSpecialRules.excuseMeAreYouAZoat]),\n];\n\n\nexport {rosters, skills, starPlayers};\n","import React, {Component} from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Table from \"react-bootstrap/Table\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {rosters, skills, starPlayers} from \"../data\";\n\n\n// A player in the player list\nconst player = (name, positionNumber, positionName, ma, st, ag, pa, av, skills, value, primaryAccess=\"\", secondaryAccess=\"\", specialRules=[], isStar=false) => {\n  return {\n    name: name,\n    positionNumber: positionNumber,\n    positionName: positionName,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    maMod: 0,\n    stMod: 0,\n    agMod: 0,\n    paMod: 0,\n    avMod: 0,\n    skills: skills || [],\n    primarySkills: [],\n    secondarySkills: [],\n    value: value,\n    primaryAccess: primaryAccess,\n    secondaryAccess: secondaryAccess,\n    specialRules: specialRules,\n    isStar: isStar,\n  };\n};\n\n\nclass Team extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      budget: 1000000,\n      costMultiplierReRolls: 1,\n      costOfAssistantCoaches: 10000,\n      costOfCheerleaders: 10000,\n      costOfDedicatedFans: 10000,\n      costOfApothecary: 50000,\n      playerAdvancementsCostGold: true,\n      customisePlayerAdvancementCosts: false,\n      costOfPrimarySkill: 20000,\n      costOfSecondarySkill: 40000,\n      costOfAV: 10000,\n      costOfMA: 20000,\n      costOfPA: 20000,\n      costOfAG: 40000,\n      costOfST: 80000,\n      name: \"\",\n      roster: rosters[0],\n      coach: \"\",\n      reRolls: 0,\n      dedicatedFans: 0,\n      assistantCoaches: 0,\n      cheerleaders: 0,\n      apothecary: 0,\n      players: new Array(16).fill(null).map((x) => player()),\n      showPlayerAdvancementModal: false,\n      selectedPlayerNumber: null,  // indexed 1-16\n      availableStarPlayers: this.getFilteredStarPlayers(rosters[0]),\n    };\n  }\n\n  setRoster = (rosterIndex) => {\n    // Select a team roster\n    this.setState({\n      roster: rosters[rosterIndex],\n      reRolls: 0,\n      dedicatedFans: 0,\n      assistantCoaches: 0,\n      cheerleaders: 0,\n      apothecary: 0,\n      players: new Array(16).fill(null).map((x) => player()),\n      availableStarPlayers: this.getFilteredStarPlayers(rosters[rosterIndex])\n    });\n  }\n\n  setRulesPresetStandard = () => {\n    this.setState({\n      budget: 1000000,\n      costMultiplierReRolls: 1,\n      costOfAssistantCoaches: 10000,\n      costOfCheerleaders: 10000,\n      costOfDedicatedFans: 10000,\n      costOfApothecary: 50000,\n    });\n  }\n\n  setRulesPresetSevens = () => {\n    this.setState({\n      budget: 600000,\n      costMultiplierReRolls: 2,\n      costOfAssistantCoaches: 20000,\n      costOfCheerleaders: 20000,\n      costOfDedicatedFans: 20000,\n      costOfApothecary: 80000,\n    });\n  }\n\n  getCostOfReRolls = () => {\n    return Math.round(this.state.roster.costOfReRolls * this.state.costMultiplierReRolls);\n  }\n\n  setPlayer = (playerNumber, positionNumber) => {\n    // Set a player in the player list\n    // Note: inputs playerNumber and playerPosition are one-indexed\n    let players = this.state.players;\n    if (players[playerNumber-1].isStar) {\n      // If player was a star player, clear the name\n      players[playerNumber-1].name = \"\";\n    }\n    if (positionNumber === 0) {\n      // No position is selected: insert empty player\n      players[playerNumber-1] = player(players[playerNumber-1].name);\n    } else if (positionNumber > 100) {\n      // Star player is selected: insert star player\n      let p = this.state.availableStarPlayers[positionNumber-101];\n      players[playerNumber-1] = player(p.name, positionNumber, \"Star\", p.ma, p.st, p.ag, p.pa, p.av, p.skills, p.cost, null, null, p.specialRules, true);\n    } else {\n      // Positional player is selected: insert new player\n      let p = this.state.roster.positionals[positionNumber-1];\n      players[playerNumber-1] = player(players[playerNumber-1].name, positionNumber, p.position, p.ma, p.st, p.ag, p.pa, p.av, p.skills, p.cost, p.primaryAccess, p.secondaryAccess);\n    }\n    this.setState({players: players});\n    // Remove focus from dropdown menu to trigger onblur event\n    document.activeElement.blur();\n  }\n\n  onSetPlayerOpen = (options) => {\n    // Show quantity (0-16) in dropdown options\n    for (let i = 0; i < this.state.roster.positionals.length; i++) {\n      let p = this.state.roster.positionals[i];\n      options[i+1].textContent = p.position + \" (0-\" + p.quantity + \")\";\n    }\n    for (let i = 0; i < this.state.availableStarPlayers.length; i++) {\n      let p = this.state.availableStarPlayers[i];\n      options[i+this.state.roster.positionals.length+1].textContent = p.name;\n    }\n  }\n\n  onSetPlayerClose = (options) => {\n    // Remove quantity (0-16) in dropdown options\n    for (let i = 0; i < this.state.roster.positionals.length; i++) {\n      let p = this.state.roster.positionals[i];\n      options[i+1].textContent = p.position;\n    }\n    for (let i = 0; i < this.state.availableStarPlayers.length; i++) {\n      options[i+this.state.roster.positionals.length+1].textContent = \"Star Player\";\n    }\n  }\n\n  setPlayerName = (playerNumber, playerName) => {\n    // Set the name of a player in the player list\n    let players = this.state.players;\n    players[playerNumber-1].name = playerName;\n    this.setState({players: players});\n  }\n\n  getSelectedPlayer = () => {\n    // Get the player selected for advancement\n    if (this.state.showPlayerAdvancementModal && this.state.selectedPlayerNumber) {\n      return this.state.players[this.state.selectedPlayerNumber-1];\n    } else {\n      return null;\n    }\n  }\n\n  setSelectedPlayer = (player) => {\n    // Save player to state at the index of the selected player\n    let players = this.state.players;\n    players[this.state.selectedPlayerNumber-1] = player;\n    this.setState({players: players});\n  }\n\n  renderPlayerSkills = (player) => {\n    // Render player skill list including skill advancements\n    if (player.positionNumber) {\n      let skills = player.skills.map((s) => <span className=\"skill-default\">{s}</span>);\n      skills = skills.concat(player.primarySkills.map((s) => <span className=\"skill-primary\">{s}</span>));\n      skills = skills.concat(player.secondarySkills.map((s) => <span className=\"skill-secondary\">{s}</span>));\n      skills = skills.concat(player.specialRules.map((s) => <span className=\"skill-special\">{s}</span>));\n      return <div className={(!player.isStar && \"cursor-pointer\") || \"\"}>{skills.map((s, i) => i > 0 ? <span key={i}>, {s}</span> : <span key={i}>{s}</span>)}</div>;\n    }\n  }\n\n  showPlayerAdvancementModal = (playerNumber) => {\n    // Select player and show player advancement modal\n    this.setState({\n      selectedPlayerNumber: playerNumber,\n      showPlayerAdvancementModal: true\n    });\n  }\n\n  renderPlayerChar = (player, char, interactive) => {\n    if (typeof player[char] !== \"undefined\") {\n      let mod = player[char + \"Mod\"];\n      if([\"ma\", \"st\"].includes(char)) {\n        return <span className={mod && \"text-orange\"}>{player[char] + mod}</span>;\n      } else if (char === \"ag\") {\n        return <span className={mod && \"text-orange\"}>{player[char] - mod + \"+\"}</span>;\n      } else if (char === \"pa\") {\n        if (player[char] !== null) {\n          return <span className={mod && \"text-orange\"}>{player[char] - mod + \"+\"}</span>;\n        } else {\n          return <span>-</span>;\n        }\n      } else if (char === \"av\") {\n        return <span className={mod && \"text-orange\"}>{player[char] + mod + \"+\"}</span>;\n      }\n    }\n  }\n\n  toggleSelectedPlayerChar = (char) => {\n    // Improve or reset a characteristic of the selected player\n    let player = this.getSelectedPlayer();\n    if (this.playerCharMayBeImproved(player, char)) {\n      player[char + \"Mod\"] += 1;\n    } else {\n      player[char + \"Mod\"] = 0;\n    }\n    this.setSelectedPlayer(player);\n  }\n\n  playerCharMayBeImproved = (player, char) => {\n    // Determine if a player characteristic may be improved\n    return !(\n      player[char + \"Mod\"] === 2 ||\n      (char === \"ma\" && player.ma + player.maMod === 9) ||\n      (char === \"st\" && player.st + player.stMod === 8) ||\n      (char === \"ag\" && player.ag - player.agMod === 1) ||\n      (char === \"pa\" && (player.pa === null || player.pa - player.paMod === 1)) ||\n      (char === \"av\" && player.av + player.avMod === 11)\n    );\n  }\n\n  renderSkill = (skill, category) => {\n    // Render a skill in the skill advancement table\n    let player = this.getSelectedPlayer();\n    if (player) {\n      if (player.skills.includes(skill)) {\n        // Selected player has the skill as a starting skill\n        return <span className=\"text-orange\">{skill}</span>;\n      } else if (!player.primaryAccess.includes(category) && !player.secondaryAccess.includes(category)) {\n        // Selected player does not have access to the skill\n        return <span className=\"text-muted\">{skill}</span>;\n      } else if (player.primarySkills.includes(skill) || player.secondarySkills.includes(skill)) {\n        // Selected player has already added the skill\n        return <span className=\"skill-selected\" onClick={() => this.removeSkill(skill)}>{skill}</span>;\n      } else {\n        // Skill is available\n        return <span className=\"skill-available\" onClick={() => this.addSkill(skill, category)}>{skill}</span>;\n      }\n    }\n  }\n\n  addSkill = (skill, category) => {\n    // Add skill to selected player\n    let player = this.getSelectedPlayer();\n    if (player.primaryAccess.includes(category)) {\n      player.primarySkills.push(skill);\n      player.primarySkills.sort();\n    } else if (player.secondaryAccess.includes(category)) {\n      player.secondarySkills.push(skill);\n      player.secondarySkills.sort();\n    }\n    this.setSelectedPlayer(player);\n  }\n\n  removeSkill = (skill) => {\n    // Remove skill from selected player\n    let player = this.getSelectedPlayer();\n    player.primarySkills = player.primarySkills.filter((s) => s !== skill);\n    player.secondarySkills = player.secondarySkills.filter((s) => s !== skill);\n    this.setSelectedPlayer(player);\n  }\n\n  getPlayerValue = (player) => {\n    let value = player.value || 0;\n    if (this.state.playerAdvancementsCostGold) {\n      value += player.primarySkills.length * this.state.costOfPrimarySkill;\n      value += player.secondarySkills.length * this.state.costOfSecondarySkill;\n      value += player.maMod * this.state.costOfMA;\n      value += player.stMod * this.state.costOfST;\n      value += player.agMod * this.state.costOfAG;\n      value += player.paMod * this.state.costOfPA;\n      value += player.avMod * this.state.costOfAV;\n    }\n    return value;\n  }\n\n  getTeamValue = () => {\n    // Compute the current team value\n    let tv = 0;\n    // players\n    tv += this.state.players.reduce((total, player) => {return total + this.getPlayerValue(player);}, 0);\n    // sideline staff\n    tv += this.state.assistantCoaches * this.state.costOfAssistantCoaches;\n    tv += this.state.cheerleaders * this.state.costOfCheerleaders;\n    tv += this.state.apothecary * this.state.costOfApothecary;\n    // team re-rolls\n    tv += this.state.reRolls * this.getCostOfReRolls();\n    // (fans and treasury do not add to team value)\n    return tv;\n  }\n\n  getTreasury = () => {\n    // Compute the current treasury value\n    let treasury = this.state.budget;\n    treasury -= this.getTeamValue();\n    treasury -= this.state.dedicatedFans * this.state.costOfDedicatedFans;\n    return treasury;\n  }\n\n  formatCost = (x) => {\n    // Format a number into a cost string, example: 10000 -> 10,000 GP\n    return `${x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} GP`;\n  }\n\n  toggleCustomisePlayerAdvancementCosts = () => {\n    this.setState({\n      customisePlayerAdvancementCosts: !this.state.customisePlayerAdvancementCosts,\n      costOfPrimarySkill: 20000,\n      costOfSecondarySkill: 40000,\n      costOfAV: 10000,\n      costOfMA: 20000,\n      costOfPA: 20000,\n      costOfAG: 40000,\n      costOfST: 80000,\n    });\n  }\n\n  getFilteredStarPlayers = (roster) => {\n    // TODO: Is 'Favoured of' handled correctly? Is it even used?\n    return starPlayers.filter(starPlayer => {\n      return starPlayer.playsFor.includes(\"Any team\") || starPlayer.playsFor.some(r => roster.specialRules.includes(r));\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n\n        <Tabs defaultActiveKey=\"team\">\n          <Tab eventKey=\"team\" title=\"Team\">\n            <Row>\n              <Col md=\"5\">\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-1\">\n                  <tbody>\n                    <tr>\n                      <td>Team Name:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" value={this.state.name} onChange={(e) => this.setState({name: e.target.value})} /></td>\n                    </tr>\n                    <tr>\n                      <td>Coach:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" value={this.state.coach} onChange={(e) => this.setState({coach: e.target.value})} /></td>\n                    </tr>\n                    <tr>\n                      <td>Roster:</td>\n                      <td>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e) => this.setRoster(e.target.value)}>\n                         {rosters.map((roster, i) => {return <option key={i} value={i}>{roster.name}</option>;})}\n                        </Form.Control>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Treasury:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTreasury())} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Team Value:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTeamValue())} readOnly /></td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n              <Col md=\"7\">\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-2\">\n                  <tbody>\n                    <tr>\n                      <td>Team re-rolls:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.reRolls.toString()} onChange={(e) => this.setState({reRolls: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 8)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getCostOfReRolls())} readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.reRolls * this.getCostOfReRolls())} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Assistant Coaches:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.assistantCoaches.toString()} onChange={(e) => this.setState({assistantCoaches: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 6)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfAssistantCoaches)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.assistantCoaches * this.state.costOfAssistantCoaches)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Cheerleaders:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.cheerleaders.toString()} onChange={(e) => this.setState({cheerleaders: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 12)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfCheerleaders)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.cheerleaders * this.state.costOfCheerleaders)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Dedicated Fans:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.dedicatedFans.toString()} onChange={(e) => this.setState({dedicatedFans: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 6)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfDedicatedFans)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.dedicatedFans * this.state.costOfDedicatedFans)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Apothecary:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.apothecary.toString()} onChange={(e) => this.setState({apothecary: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 1)})} readOnly={!this.state.roster.apothecaryAllowed} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfApothecary)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.apothecary * this.state.costOfApothecary)} readOnly /></td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Tab>\n          <Tab eventKey=\"budget\" title=\"Budget\">\n            <Row>\n              <Col md=\"6\">\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\n                  <tbody>\n                    <tr>\n                      <td>Rules presets:</td>\n                      <td>\n                        <Button variant=\"dark\" size=\"sm\" onClick={() => this.setRulesPresetStandard()}>Standard</Button>{\" \"}\n                        <Button variant=\"dark\" size=\"sm\" onClick={() => this.setRulesPresetSevens()}>Sevens</Button>\n                      </td>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td>Team draft budget:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.budget.toString()} onChange={(e) => this.setState({budget: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Team re-roll cost multiplier:</td>\n                        <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costMultiplierReRolls.toString()} onChange={(e) => this.setState({costMultiplierReRolls: e.target.value && Math.max(e.target.value || 0, 0)})} /></td>\n                      <td>x</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of assistant coaches:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAssistantCoaches.toString()} onChange={(e) => this.setState({costOfAssistantCoaches: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of cheerleaders:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfCheerleaders.toString()} onChange={(e) => this.setState({costOfCheerleaders: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of dedicated fans:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfDedicatedFans.toString()} onChange={(e) => this.setState({costOfDedicatedFans: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of apothecary:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfApothecary.toString()} onChange={(e) => this.setState({costOfApothecary: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\n                      <td>GP</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n              <Col md=\"6\">\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\n                  <tbody>\n                    <tr>\n                      <td>Player advancements cost gold:</td>\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.playerAdvancementsCostGold} onChange={(e) => this.setState({playerAdvancementsCostGold: !this.state.playerAdvancementsCostGold})} /></td>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td>Customise cost of player advancements:</td>\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.customisePlayerAdvancementCosts} onChange={(e) => this.toggleCustomisePlayerAdvancementCosts()} /></td>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td>Cost of primary skill:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfPrimarySkill.toString()} onChange={(e) => this.setState({costOfPrimarySkill: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of secondary skill:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfSecondarySkill.toString()} onChange={(e) => this.setState({costOfSecondarySkill: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of AV:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAV.toString()} onChange={(e) => this.setState({costOfAV: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of MA:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfMA.toString()} onChange={(e) => this.setState({costOfMA: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of PA:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfPA.toString()} onChange={(e) => this.setState({costOfPA: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of AG:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAG.toString()} onChange={(e) => this.setState({costOfAG: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of ST:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfST.toString()} onChange={(e) => this.setState({costOfST: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Tab>\n        </Tabs>\n\n        <Row>\n          <Col>\n            <Table bordered hover size=\"sm\" className=\"player-table table-striped\">\n              <thead>\n                <tr>\n                  <th className=\"text-center\"></th>\n                  <th className=\"text-left\">Name</th>\n                  <th className=\"text-left\">Position</th>\n                  <th className=\"text-center\">MA</th>\n                  <th className=\"text-center\">ST</th>\n                  <th className=\"text-center\">AG</th>\n                  <th className=\"text-center\">PA</th>\n                  <th className=\"text-center\">AV</th>\n                  <th className=\"text-left\">Skills</th>\n                  <th className=\"text-center\">Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.players.map((player, i) => {\n                  return (<tr key={i+1}>\n                    <td className=\"player-number\">{i+1}</td>\n                    <td className=\"player-name\"><Form.Control type=\"text\" id={i+1} readOnly={player.isStar} plaintext value={player.name || \"\"} onChange={(e) => this.setPlayerName(parseInt(e.target.id), e.target.value)} /></td>\n                    <td className=\"player-position\">\n                      <Form.Control as=\"select\" id={i+1} size=\"sm\" plaintext value={player.positionNumber || 0}\n                        onChange={(e) => this.setPlayer(parseInt(e.target.id), parseInt(e.target.value))}\n                        onFocus={(e) => this.onSetPlayerOpen(e.target.children)}\n                        onBlur={(e) => this.onSetPlayerClose(e.target.children)}\n                      >\n                        <option key=\"0\" value=\"0\">-</option>\n                        {this.state.roster.positionals.map((p, i) => {return <option key={i+1} value={i+1}>{p.position}</option>;})}\n                        {this.state.availableStarPlayers.map((p, i) => {return <option key={i+101} value={i+101}>{p.name}</option>;})}\n                      </Form.Control>\n                    </td>\n                    <td className=\"player-ma\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"ma\")}</td>\n                    <td className=\"player-st\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"st\")}</td>\n                    <td className=\"player-ag\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"ag\")}</td>\n                    <td className=\"player-pa\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"pa\")}</td>\n                    <td className=\"player-av\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"av\")}</td>\n                    <td className=\"player-skills\" onClick={() => player.positionNumber && !player.isStar && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerSkills(player)}</td>\n                    <td className=\"player-value\">{player.value && this.formatCost(this.getPlayerValue(player))}</td>\n                  </tr>);\n                })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n        <Modal\n          show={this.state.showPlayerAdvancementModal}\n          onHide={() => this.setState({showPlayerAdvancementModal: false})}\n          animation={true}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              {this.getSelectedPlayer() && this.getSelectedPlayer().positionName}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Table size=\"sm\" className=\"advancement-table\">\n              <thead>\n                <tr>\n                  <th>MA</th>\n                  <th>ST</th>\n                  <th>AG</th>\n                  <th>PA</th>\n                  <th>AV</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"ma\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"ma\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"st\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"st\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"ag\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"ag\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"pa\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"pa\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"av\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"av\")}\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <Table size=\"sm\" className=\"advancement-table\">\n              <thead>\n                <tr>\n                  <th>Primary skill access</th>\n                  <th>Secondary skill access</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{this.getSelectedPlayer() && this.getSelectedPlayer().primaryAccess}</td>\n                  <td>{this.getSelectedPlayer() && this.getSelectedPlayer().secondaryAccess}</td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <Table size=\"sm\" className=\"advancement-table table-striped\">\n              <thead>\n                <tr>\n                  <th>Agility</th>\n                  <th>General</th>\n                  <th>Mutations</th>\n                  <th>Passing</th>\n                  <th>Strength</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr><td>{this.renderSkill(skills.catch, \"A\")}</td><td>{this.renderSkill(skills.block, \"G\")}</td><td>{this.renderSkill(skills.bigHand, \"M\")}</td><td>{this.renderSkill(skills.accurate, \"P\")}</td><td>{this.renderSkill(skills.armBar, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.divingCatch, \"A\")}</td><td>{this.renderSkill(skills.dauntless, \"G\")}</td><td>{this.renderSkill(skills.claws, \"M\")}</td><td>{this.renderSkill(skills.cannoneer, \"P\")}</td><td>{this.renderSkill(skills.brawler, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.divingTackle, \"A\")}</td><td>{this.renderSkill(skills.dirtyPlayer(1), \"G\")}</td><td>{this.renderSkill(skills.disturbingPresence, \"M\")}</td><td>{this.renderSkill(skills.cloudBurster, \"P\")}</td><td>{this.renderSkill(skills.breakTackle, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.dodge, \"A\")}</td><td>{this.renderSkill(skills.fend, \"G\")}</td><td>{this.renderSkill(skills.extraArms, \"M\")}</td><td>{this.renderSkill(skills.dumpOff, \"P\")}</td><td>{this.renderSkill(skills.grab, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.defensive, \"A\")}</td><td>{this.renderSkill(skills.frenzy, \"G\")}</td><td>{this.renderSkill(skills.foulAppearance, \"M\")}</td><td>{this.renderSkill(skills.fumblerooskie, \"P\")}</td><td>{this.renderSkill(skills.guard, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.jumpUp, \"A\")}</td><td>{this.renderSkill(skills.kick, \"G\")}</td><td>{this.renderSkill(skills.horns, \"M\")}</td><td>{this.renderSkill(skills.hailMaryPass, \"P\")}</td><td>{this.renderSkill(skills.juggernaut, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.leap, \"A\")}</td><td>{this.renderSkill(skills.pro, \"G\")}</td><td>{this.renderSkill(skills.ironHardSkin, \"M\")}</td><td>{this.renderSkill(skills.leader, \"P\")}</td><td>{this.renderSkill(skills.mightyBlow(1), \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.safePairOfHands, \"A\")}</td><td>{this.renderSkill(skills.shadowing, \"G\")}</td><td>{this.renderSkill(skills.monstrousMouth, \"M\")}</td><td>{this.renderSkill(skills.nervesOfSteel, \"P\")}</td><td>{this.renderSkill(skills.multipleBlock, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sideStep, \"A\")}</td><td>{this.renderSkill(skills.stripBall, \"G\")}</td><td>{this.renderSkill(skills.prehensileTail, \"M\")}</td><td>{this.renderSkill(skills.onTheBall, \"P\")}</td><td>{this.renderSkill(skills.pileDriver, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sneakyGit, \"A\")}</td><td>{this.renderSkill(skills.sureHands, \"G\")}</td><td>{this.renderSkill(skills.tentacles, \"M\")}</td><td>{this.renderSkill(skills.pass, \"P\")}</td><td>{this.renderSkill(skills.standFirm, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sprint, \"A\")}</td><td>{this.renderSkill(skills.tackle, \"G\")}</td><td>{this.renderSkill(skills.twoHeads, \"M\")}</td><td>{this.renderSkill(skills.runningPass, \"P\")}</td><td>{this.renderSkill(skills.strongArm, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sureFeet, \"A\")}</td><td>{this.renderSkill(skills.wrestle, \"G\")}</td><td>{this.renderSkill(skills.veryLongLegs, \"M\")}</td><td>{this.renderSkill(skills.safePass, \"P\")}</td><td>{this.renderSkill(skills.thickSkull, \"S\")}</td></tr>\n              </tbody>\n            </Table>\n          </Modal.Body>\n        </Modal>\n\n      </Container>\n    );\n  }\n}\n\n\nexport default Team;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactGA from \"react-ga\";\n\nimport Team from \"./components/Team\";\nimport \"./App.css\";\n\n\nReactGA.initialize(\"UA-191514354-1\");\nReactGA.pageview(window.location.href);\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Container><Row><Col id=\"header\"><span className=\"text-orange\">Nuflheim</span> Team Draft List</Col></Row></Container>\n      </header>\n      <main>\n        <Team />\n      </main>\n      <footer>\n        <Container>\n          <Row>\n            <Col>\n              <p>~ Nuflheim ~</p>\n              <p><small>This is an unofficial and non-commercial fan website.</small></p>\n              <p><small>This website uses <a href=\"https://www.google.com/policies/privacy/partners/\" rel=\"noreferrer\" target=\"_blank\">Google Analytics</a>.</small></p>\n              <p><small>Please report any issues via <a href=\"https://github.com/jonasbusk/nuflheim\" rel=\"noreferrer\" target=\"_blank\">GitHub</a>.</small></p>\n              <p>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}